package gui.clientes;

import gui.clientes.*;
import dataBase.dao.EscolaridadDAO;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import tools.UtilsTable;


public class AddEscolaridad extends javax.swing.JDialog {
    // Para agregar el paises
    int escolaridad_id;
    EscolaridadDAO escolaridad_dao;
    // Para listar todos los paises 
    Object lista_escolaridad [][];  // Id, pais
   // public Object film[];
    java.awt.Frame parent;    

    /**
     * Creates new form ???
     * @param parent
     * @param modal
     */
    public AddEscolaridad(java.awt.Frame parent, boolean modal) {
        // ventana modal
        super(parent, modal);   // Llama al constructor del padre
        this.parent= parent;
        setTitle("Escolaridad");
        // inicia los componentes
        initComponents();
        // Crea el dao
        escolaridad_dao = new EscolaridadDAO();
        // llena la tabla
        LlenaTabla();
    }
    
    // ? ? ? 
    public void SetPaisId(int id_escolaridad){   
        // Asigna el id del libro
        this.escolaridad_id = id_escolaridad;
        txtFiltro.setText("");
        LlenaTabla();
    }
    
    // Llena y despliega la tabla de autores 
    private void LlenaTabla(){     
        // Consulta todos los autores (id, nombre apellido)
        lista_escolaridad = escolaridad_dao.GetEscolaridadByNombre(txtFiltro.getText().trim());
        // Titulos de la tabla
        String[] T_ESCOLARIDAD = {"","Escolaridad"};
        // alineación de las celdas
        int[][] cellAlignment = {{0,javax.swing.SwingConstants.LEFT}};
        // Tamaño de las celdas
        int[][] cellSize = {{0,0},
                            {1,170}};
        /*
            Metodo que llena las tablas, recibe la tabla, los datos, los titulos,
            la alineación y el tamaño de las celdas
        */
       
        UtilsTable.llenaTabla(tableList,lista_escolaridad, T_ESCOLARIDAD, cellAlignment, cellSize);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTableList = new javax.swing.JPanel();
        scpTableList = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        txtFiltro = new javax.swing.JTextField();
        lblFiltro = new javax.swing.JLabel();
        btnNewEscolaridad = new javax.swing.JButton();
        btnDelEscolaridad = new javax.swing.JButton();
        btnEditEscolaridad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage( getClass().getResource("/img/user_icon.png")));

        pnlTableList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 16))); // NOI18N
        pnlTableList.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scpTableList.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scpTableList.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tableList.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListMouseClicked(evt);
            }
        });
        scpTableList.setViewportView(tableList);

        pnlTableList.add(scpTableList, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 180, 170));

        txtFiltro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });
        pnlTableList.add(txtFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 140, 25));

        lblFiltro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblFiltro.setText("Filtrar:");
        pnlTableList.add(lblFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 25));

        btnNewEscolaridad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/add.png"))); // NOI18N
        btnNewEscolaridad.setToolTipText("Registrar nuevo idioma");
        btnNewEscolaridad.setFocusable(false);
        btnNewEscolaridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEscolaridadActionPerformed(evt);
            }
        });

        btnDelEscolaridad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/borrar.png"))); // NOI18N
        btnDelEscolaridad.setToolTipText("Borrar idioma");
        btnDelEscolaridad.setFocusable(false);
        btnDelEscolaridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelEscolaridadActionPerformed(evt);
            }
        });

        btnEditEscolaridad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/editar.png"))); // NOI18N
        btnEditEscolaridad.setToolTipText("Editar idioma");
        btnEditEscolaridad.setFocusable(false);
        btnEditEscolaridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEscolaridadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTableList, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNewEscolaridad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnEditEscolaridad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnDelEscolaridad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTableList, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewEscolaridad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelEscolaridad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditEscolaridad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Hacer doble click no hace nada
    private void tableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListMouseClicked
       
    }//GEN-LAST:event_tableListMouseClicked

    // Abre una ventana que posibilida crear un PAIS
    private void btnNewEscolaridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEscolaridadActionPerformed
        AddNewEscolaridad add_new_escolaridad = new AddNewEscolaridad(parent, true);        
        // Localizacvión de la ventana        
        add_new_escolaridad.setLocationRelativeTo(this);
        // hace visible la ventana
        add_new_escolaridad.setVisible(true);        
        LlenaTabla();
        // cuando cierra la ventana agrega el pais a la tabla y lo selecciona
        UtilsTable.mueveTabla(tableList, UtilsTable.getRow(lista_escolaridad, add_new_escolaridad.escolaridad_id));
    }//GEN-LAST:event_btnNewEscolaridadActionPerformed

    // Llena la tabla de paises cada que se escribe una letra
    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        // Filtra paises  
        LlenaTabla();
    }//GEN-LAST:event_txtFiltroKeyReleased

    // Elimina al pais seleccionado de la tabla de ESCOLARIDAD
    private void btnDelEscolaridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelEscolaridadActionPerformed
        // Eliminar un registro
        // si no selecciona fila, le avisa al usuario
        if (tableList.getSelectedRow() < 0){
             // suena un beep
            java.awt.Toolkit.getDefaultToolkit().beep();
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una fila","Aviso", 2);
        }
        else{
            // suena un beep
            java.awt.Toolkit.getDefaultToolkit().beep();
            // pregunta si quiere eliminar el registro y camtura la respuesta
            int res = javax.swing.JOptionPane.showConfirmDialog(this, "¿Eliminar " + lista_escolaridad[tableList.getSelectedRow()][1].toString() + "?",
                 "Seleccione", JOptionPane.YES_NO_OPTION);
            // evalua la respuesta 
            if (res == 0){
                String msj = "";
                // si la respuesta es afirmativa, elimina el registro
                int ret = escolaridad_dao.DeleteEscolaridad((Integer) tableList.getValueAt(tableList.getSelectedRow(), 0));
                if (ret == 1){
                    msj = "No se pudo eliminar por que tiene registros asignados.";
                    javax.swing.JOptionPane.showMessageDialog(this, msj, "Información", 1);
                }                
                // Reinicia controles y parametros
                LlenaTabla();
            }
        }
    }//GEN-LAST:event_btnDelEscolaridadActionPerformed

    // Abre una ventana para poder editar al pais seleccionado
    private void btnEditEscolaridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEscolaridadActionPerformed
        // Botón que edita el registro selecionado de la tabla
        if (tableList.getSelectedRow() < 0){
            // Suena un beep
            Toolkit.getDefaultToolkit().beep();
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una fila", "Información", 1);
        }
        else{
            // Obtiene el id del pais seleccionado
            escolaridad_id = (Integer) tableList.getValueAt(tableList.getSelectedRow(), 0);
            // Abre la ventana para editar pais
            // Ventana para editar pais
            AddNewEscolaridad edit_escolaridad = new AddNewEscolaridad(parent, true);        
            // Localización de la ventana
            edit_escolaridad.setLocationRelativeTo(this);            
            edit_escolaridad.SetEditId(escolaridad_id);
            // hace visible la ventana
            edit_escolaridad.setVisible(true);
            LlenaTabla();
            // cuando cierra la ventana agrega el pais a la tabla y lo selecciona
            UtilsTable.mueveTabla(tableList, UtilsTable.getRow(lista_escolaridad, edit_escolaridad.escolaridad_id));
        }
    }//GEN-LAST:event_btnEditEscolaridadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelEscolaridad;
    private javax.swing.JButton btnEditEscolaridad;
    private javax.swing.JButton btnNewEscolaridad;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JPanel pnlTableList;
    private javax.swing.JScrollPane scpTableList;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}