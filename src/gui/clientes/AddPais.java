package gui.clientes;

import dataBase.dao.PaisDAO;
import dataBase.dao.EstadoDAO;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import tools.UtilsTable;

/**
 *
 * @author Alfonso
 * Ventana que permite agregar paises
 */
public class AddPais extends javax.swing.JDialog {
    // Para agregar el paises
    int pais_id;
    int estado_id;
    PaisDAO pais_dao;
    // Para listar todos los paises 
    Object lista_paises [][];  // Id, pais
    Object lista_estados [][];
   // public Object film[];
    java.awt.Frame parent;    

    /**
     * Creates new form ???
     * @param parent
     * @param modal
     */
    public AddPais(java.awt.Frame parent, boolean modal) {
        // ventana modal
        super(parent, modal);   // Llama al constructor del padre
        this.parent= parent;
        setTitle("Paises");
        // inicia los componentes
        initComponents();
        // Crea el dao
        pais_dao = new PaisDAO();
        // llena la tabla
        LlenaTabla();
    }  
    
    // Llena y despliega la tabla de autores 
    private void LlenaTabla() {     
        // Consulta todos los autores (id, nombre apellido)
        lista_paises = pais_dao.getPaisesByNombre(TextFieldPais.getText().trim());
        // Titulos de la tabla
        String[] T_PAIS = {"","Pais"};
        // alineación de las celdas
        int[][] cellAlignment = {{0,javax.swing.SwingConstants.LEFT}};
        // Tamaño de las celdas
        int[][] cellSize = {{0,0},
                            {1,400}};
        /*
            Metodo que llena las tablas, recibe la tabla, los datos, los titulos,
            la alineación y el tamaño de las celdas
        */
       
        UtilsTable.llenaTabla(tableListPaises, lista_paises, T_PAIS, cellAlignment, cellSize);       
        UtilsTable.quitarColumna(tableListPaises, 0);
    }
    
    private void LlenaEstados() {
        EstadoDAO estado_dao = new EstadoDAO();
        lista_estados = estado_dao.getEstadosByNombre(pais_id, TextFieldEstado.getText().trim());
        UtilsTable.limpiaTabla(tableListEstados);                        
        String[] T_ESTADOS = {"","Estado"};
        // alineación de las celdas
        int[][] cellAlignment = {{0,javax.swing.SwingConstants.LEFT}};
        // Tamaño de las celdas
        int[][] cellSize = {{0,0},
                            {1,400}};
       
        UtilsTable.llenaTabla(tableListEstados, lista_estados, T_ESTADOS, cellAlignment, cellSize);       
        UtilsTable.quitarColumna(tableListEstados, 0);

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlTableList = new javax.swing.JPanel();
        TextFieldPais = new javax.swing.JTextField();
        lblFiltro1 = new javax.swing.JLabel();
        lblFiltro2 = new javax.swing.JLabel();
        scpTableList1 = new javax.swing.JScrollPane();
        tableListPaises = new javax.swing.JTable();
        btnNewPais = new javax.swing.JButton();
        btnEditPais = new javax.swing.JButton();
        btnDelPais = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblFiltro = new javax.swing.JLabel();
        lblFiltro3 = new javax.swing.JLabel();
        TextFieldEstado = new javax.swing.JTextField();
        scpTableList = new javax.swing.JScrollPane();
        tableListEstados = new javax.swing.JTable();
        btnNewEstado = new javax.swing.JButton();
        btnEditEstado = new javax.swing.JButton();
        btnDelEstado = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage( getClass().getResource("/img/libros.png")));

        pnlTableList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 16))); // NOI18N
        pnlTableList.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TextFieldPais.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextFieldPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldPaisKeyReleased(evt);
            }
        });
        pnlTableList.add(TextFieldPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 340, 25));

        lblFiltro1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblFiltro1.setText("Filtrar:");
        pnlTableList.add(lblFiltro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 25));

        lblFiltro2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFiltro2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFiltro2.setText("Paises");
        pnlTableList.add(lblFiltro2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 110, 25));

        scpTableList1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scpTableList1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tableListPaises.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableListPaises.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][] {

            },
            new String [] {

            }
        ));
        tableListPaises.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListPaisesMouseClicked(evt);
            }
        });
        scpTableList1.setViewportView(tableListPaises);

        pnlTableList.add(scpTableList1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 390, 170));

        btnNewPais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/add.png"))); // NOI18N
        btnNewPais.setToolTipText("Registrar nuevo idioma");
        btnNewPais.setFocusable(false);
        btnNewPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPaisActionPerformed(evt);
            }
        });
        pnlTableList.add(btnNewPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 40, 40));

        btnEditPais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/editar.png"))); // NOI18N
        btnEditPais.setToolTipText("Editar idioma");
        btnEditPais.setFocusable(false);
        btnEditPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPaisActionPerformed(evt);
            }
        });
        pnlTableList.add(btnEditPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 40, 40));

        btnDelPais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/borrar.png"))); // NOI18N
        btnDelPais.setToolTipText("Borrar idioma");
        btnDelPais.setFocusable(false);
        btnDelPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelPaisActionPerformed(evt);
            }
        });
        pnlTableList.add(btnDelPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 40, 40));

        lblFiltro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFiltro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFiltro.setText("Estados");

        lblFiltro3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblFiltro3.setText("Filtrar:");

        TextFieldEstado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextFieldEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFieldEstadoKeyReleased(evt);
            }
        });

        scpTableList.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scpTableList.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tableListEstados.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableListEstados.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][] {

            },
            new String [] {

            }
        ));
        tableListEstados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListEstadosMouseClicked(evt);
            }
        });
        scpTableList.setViewportView(tableListEstados);

        btnNewEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/add.png"))); // NOI18N
        btnNewEstado.setToolTipText("Registrar nuevo idioma");
        btnNewEstado.setFocusable(false);
        btnNewEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEstadoActionPerformed(evt);
            }
        });

        btnEditEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/editar.png"))); // NOI18N
        btnEditEstado.setToolTipText("Editar idioma");
        btnEditEstado.setFocusable(false);
        btnEditEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEstadoActionPerformed(evt);
            }
        });

        btnDelEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/borrar.png"))); // NOI18N
        btnDelEstado.setToolTipText("Borrar idioma");
        btnDelEstado.setFocusable(false);
        btnDelEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblFiltro3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextFieldEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scpTableList, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnNewEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(btnDelEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(lblFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFiltro3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextFieldEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpTableList, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTableList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTableList, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Abre una ventana que posibilida crear un PAIS
    private void btnNewPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPaisActionPerformed
        AddNewPais add_new_pais = new AddNewPais(parent, true);        
        // Localizacvión de la ventana        
        add_new_pais.setLocationRelativeTo(this);
        // hace visible la ventana
        add_new_pais.setVisible(true);        
        LlenaTabla();
        // cuando cierra la ventana agrega el pais a la tabla y lo selecciona
        UtilsTable.mueveTabla(tableListPaises, UtilsTable.getRow(lista_paises, add_new_pais.pais_id));
    }//GEN-LAST:event_btnNewPaisActionPerformed

    // Llena la tabla de paises cada que se escribe una letra
    private void TextFieldPaisKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldPaisKeyReleased
        // Filtra paises  
        LlenaTabla();
    }//GEN-LAST:event_TextFieldPaisKeyReleased

    // Elimina al pais seleccionado de la tabla de PAIS
    private void btnDelPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelPaisActionPerformed
        // Eliminar un registro
        // si no selecciona fila, le avisa al usuario
        if(tableListPaises.getSelectedRow() < 0) {
             // suena un beep
            java.awt.Toolkit.getDefaultToolkit().beep();
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una fila","Aviso", 2);
        }
        else{
            // suena un beep
            java.awt.Toolkit.getDefaultToolkit().beep();
            // pregunta si quiere eliminar el registro y camtura la respuesta            

            int res = javax.swing.JOptionPane.showConfirmDialog(this, "¿Eliminar " + UtilsTable.obtenerValor(
                          tableListPaises, tableListPaises.getSelectedRow(), 1).toString() + "?",
                 "Seleccione", JOptionPane.YES_NO_OPTION);
            // evalua la respuesta 
            if(res == 0) {
                String msj = "";
                // si la respuesta es afirmativa, elimina el registro
                int ret = pais_dao.deletePais((Integer) UtilsTable.obtenerValor(
                          tableListPaises, tableListPaises.getSelectedRow(), 0));
                if(ret != 1) {
                    msj = "No se pudo eliminar por que tiene registros asignados.";
                    javax.swing.JOptionPane.showMessageDialog(this, msj, "Información", 1);
                }                
                // Reinicia controles y parametros
                LlenaTabla();
            }
        }
    }//GEN-LAST:event_btnDelPaisActionPerformed

    // Abre una ventana para poder editar al pais seleccionado
    private void btnEditPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPaisActionPerformed
        // Botón que edita el registro selecionado de la tabla
        if(tableListPaises.getSelectedRow() < 0) {
            // Suena un beep
            Toolkit.getDefaultToolkit().beep();
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una fila", "Información", 1);
        }
        else{
            // Obtiene el id del pais seleccionado
            pais_id = (Integer) UtilsTable.obtenerValor(tableListPaises, tableListPaises.getSelectedRow(), 0);
            // Abre la ventana para editar pais
            // Ventana para editar pais
            AddNewPais edit_pais = new AddNewPais(parent, true);        
            // Localización de la ventana
            edit_pais.setLocationRelativeTo(this);            
            edit_pais.SetEditId(pais_id);
            // hace visible la ventana
            edit_pais.setVisible(true);
            LlenaTabla();
            // cuando cierra la ventana agrega el pais a la tabla y lo selecciona
            UtilsTable.mueveTabla(tableListPaises, UtilsTable.getRow(lista_paises, edit_pais.pais_id));
        }
    }//GEN-LAST:event_btnEditPaisActionPerformed

    private void tableListPaisesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListPaisesMouseClicked
        if(evt.getClickCount() == 2) {
            pais_id = (int) UtilsTable.obtenerValor(tableListPaises, tableListPaises.getSelectedRow(), 0);
            LlenaEstados();
        }
    }//GEN-LAST:event_tableListPaisesMouseClicked

    private void TextFieldEstadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldEstadoKeyReleased
        LlenaEstados();
    }//GEN-LAST:event_TextFieldEstadoKeyReleased

    private void btnNewEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEstadoActionPerformed
        AddNewEstado add_new_estado = new AddNewEstado(parent, true);        
        add_new_estado.SetPaisId(pais_id);
        // Localizacvión de la ventana        
        add_new_estado.setLocationRelativeTo(this);
        // hace visible la ventana
        add_new_estado.setVisible(true);               
        
        // cuando cierra la ventana agrega el estado a la tabla y lo selecciona
        LlenaEstados();
        UtilsTable.mueveTabla(tableListEstados, UtilsTable.getRow(lista_estados, add_new_estado.estado_id));
    }//GEN-LAST:event_btnNewEstadoActionPerformed

    private void btnEditEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEstadoActionPerformed
        if(tableListEstados.getSelectedRow() < 0) {
            // Suena un beep
            Toolkit.getDefaultToolkit().beep();
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una fila", "Información", 1);
        }
        else{
            estado_id = (int) UtilsTable.obtenerValor(tableListEstados, tableListEstados.getSelectedRow(), 0);
            AddNewEstado add_new_estado = new AddNewEstado(parent, true);        
            add_new_estado.SetPaisId(pais_id);
            add_new_estado.SetEditId(estado_id);
            // Localizacvión de la ventana        
            add_new_estado.setLocationRelativeTo(this);
            // hace visible la ventana
            add_new_estado.setVisible(true);               

            // cuando cierra la ventana agrega el estado a la tabla y lo selecciona
            LlenaEstados();
            UtilsTable.mueveTabla(tableListEstados, UtilsTable.getRow(lista_estados, add_new_estado.estado_id));
        }
    }//GEN-LAST:event_btnEditEstadoActionPerformed

    private void tableListEstadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListEstadosMouseClicked
        if(evt.getClickCount() == 2) {
            estado_id = (int) UtilsTable.obtenerValor(tableListEstados, tableListEstados.getSelectedRow(), 0);
            btnEditEstadoActionPerformed(null);
        }                    
    }//GEN-LAST:event_tableListEstadosMouseClicked

    private void btnDelEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelEstadoActionPerformed
        // Eliminar un registro
        // si no selecciona fila, le avisa al usuario
        if(tableListEstados.getSelectedRow() < 0) {
             // suena un beep
            java.awt.Toolkit.getDefaultToolkit().beep();
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una fila","Aviso", 2);
        }
        else{
            // suena un beep
            java.awt.Toolkit.getDefaultToolkit().beep();
            // pregunta si quiere eliminar el registro y camtura la respuesta            

            int res = javax.swing.JOptionPane.showConfirmDialog(this, "¿Eliminar " + UtilsTable.obtenerValor(
                          tableListEstados, tableListEstados.getSelectedRow(), 1).toString() + "?",
                 "Seleccione", JOptionPane.YES_NO_OPTION);
            // evalua la respuesta 
            if(res == 0) {
                String msj = "";
                // si la respuesta es afirmativa, elimina el registro
                EstadoDAO estado_dao = new EstadoDAO();
                int ret = estado_dao.deleteEstado((Integer) UtilsTable.obtenerValor(
                          tableListEstados, tableListEstados.getSelectedRow(), 0));
                if(ret != 1) {
                    msj = "No se pudo eliminar por que tiene registros asignados.";
                    javax.swing.JOptionPane.showMessageDialog(this, msj, "Información", 1);
                }                
                // Reinicia controles y parametros
                estado_id = 0;
                LlenaEstados();
            }
        }
    }//GEN-LAST:event_btnDelEstadoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextFieldEstado;
    private javax.swing.JTextField TextFieldPais;
    private javax.swing.JButton btnDelEstado;
    private javax.swing.JButton btnDelPais;
    private javax.swing.JButton btnEditEstado;
    private javax.swing.JButton btnEditPais;
    private javax.swing.JButton btnNewEstado;
    private javax.swing.JButton btnNewPais;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblFiltro1;
    private javax.swing.JLabel lblFiltro2;
    private javax.swing.JLabel lblFiltro3;
    private javax.swing.JPanel pnlTableList;
    private javax.swing.JScrollPane scpTableList;
    private javax.swing.JScrollPane scpTableList1;
    private javax.swing.JTable tableListEstados;
    private javax.swing.JTable tableListPaises;
    // End of variables declaration//GEN-END:variables
}