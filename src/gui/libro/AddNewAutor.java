package gui.libro;

import dataBase.dao.AutorDAO;
import dataBase.dao.PaisDAO;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos
 * Ventana que permite agregar paliculas a la renta
 */
public class AddNewAutor extends javax.swing.JDialog {
    // Para guardar el autor
    String autor_id;
    String pais;
    AutorDAO autor_dao;
    PaisDAO pais_dao;

    /**
     * Creates new form AddPeliculasRentaD
     * @param parent
     * @param modal
     */
    public AddNewAutor(java.awt.Frame parent, boolean modal) {
        // ventana modal
        super(parent, modal);
        // inicia los componentes
        initComponents();
        processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        // Crea el dao para acceder a la tabla AUTOR
        autor_dao = new AutorDAO();               
        getRootPane().setDefaultButton(btnGuardar);       
        
        // Popula el ComboBox de paises disponibles
        pais_dao = new PaisDAO();    
        Object[][] all_paises = pais_dao.GetAllPaises();        
        for (Object[] pais : all_paises) {
            // llena los datos de idioma en el combo 
            cmbPaises.addItem(pais[1].toString());
        }        
    }
    
    private void BorrarTextos(){
        // Borra los controles
        txtNombre.setText("");
        txtApellido.setText("");
        cmbPaises.setSelectedIndex(-1);
    }
    
    private boolean EstanLlenos() {
        if (txtNombre.getText().trim().length() == 0){
            javax.swing.JOptionPane.showMessageDialog(this, "Introduzca el nombre.", "Aviso", 2);
            txtNombre.requestFocus();
            return false;
        }
        else if (txtApellido.getText().trim().length() == 0){
            javax.swing.JOptionPane.showMessageDialog(this, "Introduzca el apellido.", "Aviso", 2);
            txtApellido.requestFocus();
            return false;
        }
        else if (cmbPaises.getSelectedIndex() < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un pais de origen.", "Aviso", 2);
            cmbPaises.requestFocus();
            return false;
        }
        else {
            return true;
        }
    }
    
    // Llena los datos del autor a editar (Id, nombre, apellido, pais_id)
    public void SetEditId(String id){
        // Asigna el id del autor a modificar
        this.autor_id = id;
        // Busca el autor
        Object[] autor_edit = autor_dao.GetAutorById(autor_id);
        // Muestra los datos en los controles
        txtNombre.setText(autor_edit[1].toString());
        // si el apellido no es nulo
        if (autor_edit[2] != null) {
            txtApellido.setText(autor_edit[2].toString());
        }            
        // si el pais no es nulo
        if (autor_edit[3] != null) {
            cmbPaises.setSelectedItem(autor_edit[3].toString()); 
        }                   
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTableList = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        lblNombre1 = new javax.swing.JLabel();
        cmbPaises = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Autor");
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage( getClass().getResource("/img/user_icon.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pnlTableList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 16))); // NOI18N
        pnlTableList.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pnlTableList.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 140, 25));

        lblNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblNombre.setText("Nombre:");
        pnlTableList.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 25));

        lblApellido.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblApellido.setText("Apellido:");
        pnlTableList.add(lblApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 25));

        txtApellido.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pnlTableList.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 140, 25));

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/guardar.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar");
        btnGuardar.setFocusable(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        pnlTableList.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 40, 40));

        lblNombre1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblNombre1.setText("Pais:");
        pnlTableList.add(lblNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, 25));

        cmbPaises.setFont(new java.awt.Font("C059", 0, 12)); // NOI18N
        cmbPaises.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPaisesActionPerformed(evt);
            }
        });
        pnlTableList.add(cmbPaises, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTableList, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTableList, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // Revisa que todos los campos estan llenos
        if (!EstanLlenos()) {
            return;
        }

        // Obtiene el NOMBRE del pais seleccionado
        pais = cmbPaises.getSelectedItem().toString();

        if (autor_id == null){ // Guarda un nuevo autor
            Object [] autor = new Object[3];
            autor[0] = txtNombre.getText().trim();
            autor[1] = txtApellido.getText().trim();
            autor[2] = pais_dao.GetPaisesByNombre(pais)[0][0];  // ID del pais
            autor_id = autor_dao.SaveAutor(autor);
        }
        else{ // Actualiza autor
            Object [] autor = new Object[4];
            autor[0] = autor_id;
            autor[1] = txtNombre.getText().trim();
            autor[2] = txtApellido.getText().trim();
            autor[3] = pais_dao.GetPaisesByNombre(pais)[0][0];  // ID del pais
            autor_id =  autor_dao.UpdateAutor(autor);
        }

        if (autor_id == null){
            // Suena un beep
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Error al guardar el autor", "Error", 0);                
        }
        else{
            BorrarTextos();
            autor_id = null;
            dispose();
        }                    
    }//GEN-LAST:event_btnGuardarActionPerformed
    
    // Descartar cambios al cerrar la ventana
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    private void cmbPaisesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPaisesActionPerformed
        
    }//GEN-LAST:event_cmbPaisesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cmbPaises;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombre1;
    private javax.swing.JPanel pnlTableList;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}