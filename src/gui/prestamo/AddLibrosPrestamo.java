package gui.prestamo;

import dataBase.dao.LibroDAO;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import tools.UtilsTable;

/**
 * Ventana que permite agregar libros al prestamo.
 * @author alfonso
 */
public class AddLibrosPrestamo extends javax.swing.JDialog {
    LibroDAO libroDAO;
    Object[][] librosLista;
    public Object[] libro;

    /**
     * Creates new form AddLibrosPrestamo.
     * @param parent ventana padre.
     * @param modal determina si la ventana no cede el foco a otra.
     */
    public AddLibrosPrestamo(java.awt.Frame parent, boolean modal) {       
        super(parent, modal);
        setTitle("Agregar libros al prestamo");
        
        // Inicia los componentes.
        initComponents();
        libroDAO = new LibroDAO();
        llenaTabla();
    }
    
    /**
     * Llena la tabla de libros.
     */
    private void llenaTabla() {        
       librosLista = libroDAO.getLibrosByDescripcion(txtFiltro.getText().trim());
       
       // Titulos de la tabla.
        String[] columnasNombre = {"", "Título"};
        
        // Alineación de las celdas.
        int[][] cellAlignment = {{0, javax.swing.SwingConstants.LEFT}};
        
        // Tamaño de las celdas.
        int[][] cellSize = {{0, 0}, {1, 305}};
        UtilsTable.llenaTabla(cellAlignment, cellSize, columnasNombre, tblLibros, librosLista);
    }
           
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAceptar = new javax.swing.JButton();
        pnlTableList = new javax.swing.JPanel();
        scpTableList = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();
        lblTitulo1 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        btnBorrarFiltro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage( getClass().getResource("/img/libros.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/ok.png"))); // NOI18N
        btnAceptar.setFocusable(false);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        pnlTableList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Libros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 16))); // NOI18N

        scpTableList.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scpTableList.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblLibros.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibrosMouseClicked(evt);
            }
        });
        scpTableList.setViewportView(tblLibros);

        lblTitulo1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblTitulo1.setText("Filtrar:");

        txtFiltro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        btnBorrarFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Acciones/cancelarm.png"))); // NOI18N
        btnBorrarFiltro.setToolTipText("Borrar filtro");
        btnBorrarFiltro.setFocusable(false);
        btnBorrarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTableListLayout = new javax.swing.GroupLayout(pnlTableList);
        pnlTableList.setLayout(pnlTableListLayout);
        pnlTableListLayout.setHorizontalGroup(
            pnlTableListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableListLayout.createSequentialGroup()
                .addGroup(pnlTableListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTableListLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(scpTableList, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlTableListLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitulo1)
                        .addGap(6, 6, 6)
                        .addComponent(txtFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlTableListLayout.setVerticalGroup(
            pnlTableListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableListLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlTableListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBorrarFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(txtFiltro)
                    .addComponent(lblTitulo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(scpTableList, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlTableList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(pnlTableList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Agrega el Libro seleccionado al Prestamo.
     * @param evt evento que dispara la funcion.
     */ 
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if(tblLibros.getSelectedRow() < 0) {

            // Suena un beep y muestra un mensaje.
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Seleccione un libro.", "Aviso", 2);            
        } else {      
            libro = new Object[2];               
            libro [0] = librosLista[tblLibros.getSelectedRow()][0];
            libro [1] = librosLista[tblLibros.getSelectedRow()][1];
            
            // Cierra la ventana.
            dispose();   
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * Establece los controladores cuando la ventana es abierta.
     * @param evt evento que dispara la funcion.
     */ 
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        txtFiltro.setText("");
        llenaTabla();
    }//GEN-LAST:event_formWindowActivated

    /**
     * Cuando el usuario da doble click en una fila de la tabla hace la misma acción del boton aceptar.
     * @param evt evento que dispara la funcion.
     */ 
    private void tblLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLibrosMouseClicked
        if(evt.getClickCount() == 2) {  
            btnAceptarActionPerformed (null);
        }
    }//GEN-LAST:event_tblLibrosMouseClicked

    /**
     * Filtra la tabla de Libros cuando una tecla es presionada en el filtro.
     * @param evt evento que dispara la funcion.
     */ 
    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        llenaTabla();
    }//GEN-LAST:event_txtFiltroKeyReleased

    /**
     * Borra el filtro de busqueda.
     * @param evt evento que dispara la funcion.
     */ 
    private void btnBorrarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarFiltroActionPerformed
        txtFiltro.setText("");
        llenaTabla();
    }//GEN-LAST:event_btnBorrarFiltroActionPerformed

    /**
     * Reinicia el filtro cuando la ventana es cerrada.
     * @param evt evento que dispara la funcion.
     */ 
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        txtFiltro.setText("");
        llenaTabla();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBorrarFiltro;
    private javax.swing.JLabel lblTitulo1;
    private javax.swing.JPanel pnlTableList;
    private javax.swing.JScrollPane scpTableList;
    public javax.swing.JTable tblLibros;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}